# üìÑ db/views/create_view_word_weight.py
# üìÑ db/views/create_view_word_weight.py

import asyncpg
import asyncio
from core.config import DB  # —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π config —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ –ë–î

VIEW_NAME = "view_word_weight"

DROP_VIEW_SQL = f"DROP VIEW IF EXISTS {VIEW_NAME} CASCADE;"

CREATE_VIEW_SQL = f"""
CREATE VIEW {VIEW_NAME} AS
SELECT
    d.word_id,
    d.word_src,
    d.lev_id,
    sl.weight_value
FROM dictionary d
JOIN study_level sl_map ON d.lev_id = sl_map.lev_id
JOIN study_levels sl ON sl_map.lev_name = sl.level_word
WHERE sl.weight_value IS NOT NULL;
"""

async def create_view():
    print(f"üîß –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–ª—è –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏—è VIEW: {VIEW_NAME}")
    conn = await asyncpg.connect(**DB)
    try:
        await conn.execute(DROP_VIEW_SQL)
        print(f"üóëÔ∏è –°—Ç–∞—Ä—ã–π VIEW {VIEW_NAME} —É–¥–∞–ª—ë–Ω (–µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–ª).")
        await conn.execute(CREATE_VIEW_SQL)
        print(f"‚úÖ VIEW {VIEW_NAME} —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω.")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ VIEW {VIEW_NAME}: {e}")
    finally:
        await conn.close()
        print("üîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –ë–î –∑–∞–∫—Ä—ã—Ç–æ.")

if __name__ == "__main__":
    asyncio.run(create_view())
