# analytics/personalization/update_learned_words.py

import asyncpg
from loguru import logger


async def update_learned_words(conn: asyncpg.Connection, client_id: int) -> None:
    """
    –û–±–Ω–æ–≤–ª—è–µ—Ç —Ç–∞–±–ª–∏—Ü—É learned_words: –¥–æ–±–∞–≤–ª—è–µ—Ç —Å–ª–æ–≤–∞, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–∞–ª 3 –∏ –±–æ–ª–µ–µ
    –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –≤—Ä–µ–º–µ–Ω–∏ –∏ –∫–≤–∏–∑–æ–≤.
    """
    logger.info(f"üîÅ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—ã—É—á–µ–Ω–Ω—ã—Ö —Å–ª–æ–≤ –¥–ª—è client_id={client_id}")
    await conn.execute("""
        INSERT INTO learned_words (client_id, word_id)
        SELECT client_id, word_id
        FROM (
            SELECT cal.client_id, caw.word_id,
                   COUNT(*) FILTER (WHERE caw.is_correct = TRUE) AS correct_count
            FROM client_activity_words caw
            JOIN client_activity_log cal ON cal.id = caw.activity_id
            WHERE cal.client_id = $1
            GROUP BY cal.client_id, caw.word_id
        ) sub
        WHERE correct_count >= 3
        ON CONFLICT DO NOTHING;
    """, client_id)
    logger.success(f"‚úÖ –í—ã—É—á–µ–Ω–Ω—ã–µ —Å–ª–æ–≤–∞ –æ–±–Ω–æ–≤–ª–µ–Ω—ã –¥–ª—è client_id={client_id}")
