
# üìÑ tools/rollback_analytics.py

"""
–°–∫—Ä–∏–ø—Ç –æ—Ç–∫–∞—Ç–∞: –æ—Ç–∫–ª—é—á–∞–µ—Ç —Å—Ç–µ–∫ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ v2 –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–æ–µ–∫—Ç –∫ v1.
–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:
    --config ../core/config.py
    --backup analytics_old/analytics_v1_backup.py
    --target analytics/analytics_v1_backup.py
"""

import os
from pathlib import Path
import argparse

def rollback_flag_in_config(config_path: str):
    path = Path(config_path)
    if not path.exists():
        print(f"[ERROR] config.py –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ –ø—É—Ç–∏: {config_path}")
        return

    content = path.read_text()
    if "USE_ANALYTICS_V2 = True" in content:
        updated = content.replace("USE_ANALYTICS_V2 = True", "USE_ANALYTICS_V2 = False")
        path.write_text(updated)
        print("[OK] USE_ANALYTICS_V2 –≤—ã–∫–ª—é—á–µ–Ω –≤ config.py")
    else:
        print("[INFO] –§–ª–∞–≥ —É–∂–µ –≤—ã–∫–ª—é—á–µ–Ω –∏–ª–∏ —Å—Ç—Ä–æ–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")

def restore_backup_file(backup_path: str, target_path: str):
    if Path(backup_path).exists():
        os.replace(backup_path, target_path)
        print("[OK] analytics_v1_backup.py –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏.")
    else:
        print(f"[WARN] –§–∞–π–ª —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω: {backup_path}")

def main():
    parser = argparse.ArgumentParser(description="–û—Ç–∫–∞—Ç –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å—Ç–µ–∫–∞ V2.")
    parser.add_argument("--config", default="../core/config.py", help="–ü—É—Ç—å –¥–æ config.py")
    parser.add_argument("--backup", default="../analytics_old/analytics_v1_backup.py", help="–§–∞–π–ª —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ analytics")
    parser.add_argument("--target", default="../analytics/analytics_v1_backup.py", help="–§–∞–π–ª, –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å")

    args = parser.parse_args()

    rollback_flag_in_config(args.config)
    restore_backup_file(args.backup, args.target)

if __name__ == "__main__":
    main()
